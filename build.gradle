buildscript {
    repositories {
        jcenter()
        google()
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    ext.versions = [
            "kotlin": "1.4.10",
            "androidxTest": "1.4.0",
            "powermock": "2.0.7",
            "powermockLegacy": "1.6.6"
    ]
    ext.deps = [
            "appCompat"   : "androidx.appcompat:appcompat:1.3.1",
            "kotlinStdLib": "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}",

            "work" : "androidx.work:work-runtime:2.7.0-alpha05",
            "workTesting" : "androidx.work:work-testing:2.5.0",

            "androidxTestRules": "androidx.test:rules:${versions.androidxTest}",
            "androidxTestRunner": "androidx.test:runner:${versions.androidxTest}",
            "androidxTestCore": "androidx.test:core:${versions.androidxTest}",

            "junit": "androidx.test.ext:junit:1.1.3",
            "robolectric": "org.robolectric:robolectric:4.1",

            "powermockJunit": "org.powermock:powermock-module-junit4:${versions.powermock}",
            "powermockRule": "org.powermock:powermock-module-junit4-rule:${versions.powermock}",
            "powermockMockito": "org.powermock:powermock-api-mockito2:${versions.powermock}",
            "powermockClassloading" : "org.powermock:powermock-classloading-xstream:${versions.powermock}",

            "powermockJunitLegacy": "org.powermock:powermock-module-junit4:${versions.powermockLegacy}",
            "powermockRuleLegacy": "org.powermock:powermock-module-junit4-rule:${versions.powermockLegacy}",
            "powermockMockitoLegacy": "org.powermock:powermock-api-mockito:${versions.powermockLegacy}",
            "powermockClassloadingLegacy" : "org.powermock:powermock-classloading-xstream:${versions.powermockLegacy}",

            "dexmakerMockito": "com.google.dexmaker:dexmaker-mockito:1.2",

            "jsonAssert": "org.skyscreamer:jsonassert:1.5.0"
    ]
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
        classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.21.2'
        classpath 'de.marcphilipp.gradle:nexus-publish-plugin:0.4.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath 'androidx.navigation:navigation-safe-args-gradle-plugin:2.3.5'
    }
}

plugins {
    id 'io.codearte.nexus-staging' version '0.21.2'
    id 'de.marcphilipp.nexus-publish' version '0.4.0' apply false
}

allprojects {
    repositories {
        flatDir {
            dirs "${rootDir}/libs"
        }
        mavenLocal()
        google()
        jcenter()
    }
}

version '4.8.1-SNAPSHOT'
ext {
    compileSdkVersion = 31
    minSdkVersion = 21
    targetSdkVersion = 31
    versionCode = 139
    versionName = version

    playServicesWalletVersion = '16.0.1'
}

nexusStaging {
    packageGroup = project.hasProperty('nexusPackageGroup') ? project.getProperty('nexusPackageGroup') : 'com.braintreepayments'
    // give nexus sonatype more time to close the staging repository
    delayBetweenRetriesInMillis = 20000
    username = System.env['SONATYPE_USERNAME']
    password = System.env['SONATYPE_PASSWORD']
}

subprojects {
    repositories {
        maven {
            url "https://cardinalcommerceprod.jfrog.io/artifactory/android"
            credentials {
                username 'braintree_team_sdk'
                password 'AKCp8jQcoDy2hxSWhDAUQKXLDPDx6NYRkqrgFLRc3qDrayg6rrCbJpsKKyMwaykVL8FWusJpp'
            }
        }
    }
}
