plugins {
    id 'com.android.application'
    id 'androidx.navigation.safeargs'
}

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.braintreepayments.demo"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        multiDexEnabled true
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            storeFile file(System.env['KEYSTORE_FILE'] ?: 'debug.keystore')
            storePassword System.env['KEYSTORE_PASSWORD'] ?: 'android'
            keyAlias System.env['KEY_ALIAS'] ?: 'androiddebugkey'
            keyPassword System.env['KEY_PASSWORD'] ?: 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.pro'
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/maven/com.google.guava/guava/pom.properties', 'META-INF/maven/com.google.guava/guava/pom.xml']
        }
    }


    buildFeatures {
        dataBinding = true
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    lint {
        disable 'IconMissingDensityFolder'
        textOutput file('stdout')
        textReport true
        warning 'InvalidPackage', 'GradleCompatible'
    }
    namespace 'com.braintreepayments.demo'
}


dependencies {
    implementation 'androidx.preference:preference:1.2.0'

    implementation('com.squareup.retrofit:retrofit:1.9.0') {
        exclude module: 'com.google.gson'
    }

    implementation project(':AmericanExpress')
    implementation project(':BraintreeDataCollector')
    implementation project(':Card')
    implementation project(':GooglePay')
    implementation project(':LocalPayment')
    implementation project(':PayPal')
    implementation project(':PayPalNativeCheckout')
    implementation project(':SamsungPay')
    implementation project(':SEPADirectDebit')
    implementation project(':ThreeDSecure')
    implementation project(':UnionPay')
    implementation project(':Venmo')
    implementation project(':VisaCheckout')

    implementation 'com.squareup.okio:okio:1.13.0'
    implementation 'com.squareup.okhttp3:okhttp:3.8.1'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'de.greenrobot:eventbus:2.4.1'
    implementation deps.appCompat
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'io.card:android-sdk:5.5.1'
    implementation 'com.braintreepayments:card-form:5.4.0'

    implementation 'androidx.fragment:fragment:1.5.7'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    implementation 'androidx.lifecycle:lifecycle-runtime:2.6.1'

    debugImplementation 'com.facebook.stetho:stetho:1.6.0'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.10'

    androidTestImplementation 'com.braintreepayments:device-automator:1.0.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.5.1'
    androidTestImplementation project(':TestUtils')

    testImplementation 'junit:junit:4.13.2'
}

task demoApkSize {
  group 'Braintree'
  description 'Prints the current size of the Demo apk'

  def apkDir = fileTree('./build/outputs/apk')
  def apks = apkDir.matching {
    include '*.apk'
    exclude '*unaligned*'
  }
  apks.visit { apk ->
    def apkName = apk.getName()
    def mb = apk.getSize() / 1024 / 1000
    mb = mb.setScale(2, BigDecimal.ROUND_UP)
    println "Size of ${apkName} is ${mb} MB"
  }
}

project.tasks.findAll {
  if (it.name.startsWith('assemble')) {
    it.finalizedBy demoApkSize
  }
}
