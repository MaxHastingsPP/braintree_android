plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'signing'
}

android {
    namespace = 'com.braintreepayments.api.card'
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            all {
                jvmArgs '-noverify'
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    api project(':BraintreeCore')

    implementation deps.annotation

    testImplementation deps.robolectric
    testImplementation deps.powermockJunit
    testImplementation deps.powermockRule
    testImplementation deps.powermockMockito
    testImplementation deps.powermockClassloading
    testImplementation deps.jsonAssert
    testImplementation project(':TestUtils')
    testImplementation project(':ThreeDSecure')
    testImplementation deps.coreKtx
    testImplementation deps.kotlinStdLib
    testImplementation deps.kotlinTest

    androidTestImplementation project(':TestUtils')
    androidTestImplementation deps.androidxTestRules
    androidTestImplementation deps.androidxTestRunner
    androidTestImplementation deps.junitTest
}

// region signing and publishing

task javadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task javadocsJar(type: Jar, dependsOn: javadocs) {
    archiveClassifier.set('javadoc')
    from javadocs.destinationDir
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

signing {
    required {
        !version.endsWith("SNAPSHOT") && !version.endsWith("DEVELOPMENT")
    }
    sign publishing.publications
}

//nexusPublishing {
//    // give nexus sonatype more time to initialize the staging repository
//    clientTimeout = Duration.ofMinutes(3)
//    useStaging = !rootProject.versionName.endsWith("SNAPSHOT")
//    repositories {
//        sonatype()
//    }
//}
publishing {
    publications {
        release(MavenPublication) {
            groupId = 'com.braintreepayments.api'
            artifactId = 'card'
            version = rootProject.versionName

            artifact sourcesJar
            artifact javadocsJar

            pom {
                name = 'card'
                packaging = 'aar'
                description = 'Card dependencies for Braintree Android.'
                url = 'https://github.com/braintree/braintree_android'

                scm {
                    url = 'scm:git@github.com:braintree/braintree_android.git'
                    connection = 'scm:git@github.com:braintree/braintree_android.git'
                    developerConnection = 'scm:git@github.com:braintree/braintree_android.git'
                }

                developers {
                    developer {
                        id = 'devs'
                        name = 'Braintree Payments'
                    }
                }

                licenses {
                    license {
                        name = 'MIT'
                        url = 'http://opensource.org/licenses/MIT'
                        distribution = 'repo'
                    }
                }
            }

            afterEvaluate {
                from components.release
            }
        }
    }
}

// endregion
